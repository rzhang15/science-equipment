lei_start = "lei (legal entity identifier) - first assignment date",
country = "country iso code",
nace_core = "nace rev. 2, core code (4 digits)",
nace_primary = "nace rev. 2, primary code(s)",
nace_secondary = "nace rev. 2, secondary code(s)",
last_yr = "last avail. year",
consolidation_code = "consolidation code") %>%
mutate(raw_nace_primary = nace_primary,
raw_nace_secondary = nace_secondary)
max_sep_primary <- max(sapply(strsplit(combined_chars$nace_primary, "\n"), length))
nace_primary_cols <- paste("nace_primary", 1:max_sep_primary, sep="")
combined_chars <- separate(combined_chars, nace_primary, into = nace_primary_cols, sep = "\n", fill = "right")
max_sep_secondary <- max(sapply(strsplit(combined_chars$nace_secondary, "\n"), length))
nace_secondary_cols <- paste("nace_sec", 1:max_sep_secondary, sep="")
combined_chars <- separate(combined_chars, nace_secondary, into = nace_secondary_cols, sep = "\n", fill = "right")
op_rev_names <- paste("op_rev", 2023:1994, sep = "_")
op_rev_cols <- grep("operating revenue \\(turnover\\)\nth usd", names(combined_chars), value = TRUE)
num_emp_names <- paste("num_emp", 2023:1994, sep = "_")
num_emp_cols <- grep("number of employees\n", names(combined_chars), value = TRUE)
tot_assets_names <- paste("tot_assets", 2023:1994, sep = "_")
tot_assets_cols <- grep("total assets\nth usd", names(combined_chars), value = TRUE)
combined_chars <- combined_chars %>%
rename(!!!setNames(op_rev_cols, op_rev_names),
!!!setNames(num_emp_cols, num_emp_names),
!!!setNames(tot_assets_cols, tot_assets_names)) %>%
mutate(across(c(all_of(op_rev_names), all_of(num_emp_names), all_of(tot_assets_names)), as.integer))
count_unique_non_na <- function(x) {
length(unique(na.omit(x)))
}
combined_chars$unique_industries <- apply(combined_chars[, c("nace_core", paste0("nace_primary", 1:8), paste0("nace_sec", 1:44))], 1, count_unique_non_na)
View(combined_chars)
combined_chars <- combined_chars %>%
mutate(med_manu = ifelse(nace_core == 3250, 1, 0),
lifesciences = ifelse(nace_core == 7211, 1 ,0),
hospital = ifelse(nace_core == 8610, 1, 0),
med_practices = ifelse(nace_core == 8261 | nace_core == 8622, 1 ,0),
dental = ifelse(nace_core == 8632, 1 , 0),
other_health = ifelse(nace_core == 8690, 1, 0),
ltc = ifelse(nace_core == 8710 | nace_core == 8720 | nace_core == 8790 | nace_core == 8810,1 , 0))
combined_chars <- combined_chars %>%
mutate(med_manu = ifelse(nace_core == 3250, 1, 0),
lifesciences = ifelse(nace_core == 7211, 1 ,0),
hospital = ifelse(nace_core == 8610, 1, 0),
med_practices = ifelse(nace_core == 8261 | nace_core == 8622, 1 ,0),
dental = ifelse(nace_core == 8632, 1 , 0),
other_health = ifelse(nace_core == 8690, 1, 0),
ltc = ifelse(nace_core == 8710 | nace_core == 8720 | nace_core == 8790 | nace_core == 8810,1 , 0),
healthcare = pmax(med_manu, lifesciences, hospital, med_practices, dental, other_health, ltc))
summarize(combined_chars$healthcare)
summarise(combined_chars$healthcare)
mean(combined_chars$healthcare)
summarize(combined_chars)
summary(combined_chars)
summary(combined_chars$healthcare)
combined_chars <- combined_chars %>%
mutate(pharma = ifelse(nace_core == 2120 | nace_core == 2120, 1, 0),
med_manu = ifelse(nace_core == 3250, 1, 0),
lifesciences = ifelse(nace_core == 7211, 1 ,0),
hospital = ifelse(nace_core == 8610, 1, 0),
med_practices = ifelse(nace_core == 8261 | nace_core == 8622, 1 ,0),
dental = ifelse(nace_core == 8632, 1 , 0),
other_health = ifelse(nace_core == 8690, 1, 0),
ltc = ifelse(nace_core == 8710 | nace_core == 8720 | nace_core == 8790 | nace_core == 8810,1 , 0),
healthcare = pmax(med_manu, lifesciences, hospital, med_practices, dental, other_health, ltc, pharma))
summary(combined_chars$healthcare)
combined_chars %>% filter(healthcare==0) %>% select(nace_core) %>% unique()
not_health = combined_chars %>% filter(healthcare==0) %>% select(nace_core) %>% unique()
not_health
not_health = combined_chars %>% filter(healthcare==0) %>% group_by(nace_core) %>% summarize(count=n())
not_health
arrange(desc)
not_health %>% arrange(desc(count))
not_health %>% arrange(desc(count)) %>% head(n=20)
library(ggplot2)
library(here)
library(haven)
library(stringr)
library(purrr)
library(tidyverse)
library(readxl)
setwd(here())
set.seed(8975)
dropbox_dir <- "~/Dropbox (Harvard University)/Regulation_and_Bargaining"
ecri_data <- paste0(dropbox_dir,"/Data/ECRI")
orbis_data <- paste0(dropbox_dir,"/Data/Orbis")
# create orbis & ecri xw
all_files <- list()
for(i in 0:15) {
file = i*1000+1
df <- read_excel(paste0(orbis_data,"/mfg_vendor_xwalk/Export_mfg_vendor_",file,".xlsx"))
all_files[[i+1]] <- df
}
mfg_vendor_xwalk <- bind_rows(all_files) %>%
rename(ecri_id = "Own ID",
ecri_name = "Company name",
bvd_id = "Matched BvD ID",
bvd_name = "Matched company name")
names(mfg_vendor_xwalk) <- tolower(names(mfg_vendor_xwalk))
mfg_vendor_xwalk <- mfg_vendor_xwalk %>% select(ecri_id, bvd_id)
write_dta(mfg_vendor_xwalk, "../output/ecri_bvd_id_xw.dta")
# clean firm characteristics
all_chars <- list()
for(i in 0:15) {
file = i*1000+1
df <- read_excel(paste0(orbis_data,"/Export_mfg_vendor_",file,"_data.xlsx"), sheet = "Results")
all_chars[[i+1]] <- df
}
combined_chars <- bind_rows(all_chars) %>%
select(., -1)
names(combined_chars) <- tolower(names(combined_chars))
combined_chars <- combined_chars %>%
rename(bvd_name = "company name latin alphabet",
bvd_id = "bvd id number",
tin = "tax identification number (tin)",
lei = "lei (legal entity identifier)",
lei_start = "lei (legal entity identifier) - first assignment date",
country = "country iso code",
nace_core = "nace rev. 2, core code (4 digits)",
nace_primary = "nace rev. 2, primary code(s)",
nace_secondary = "nace rev. 2, secondary code(s)",
last_yr = "last avail. year",
consolidation_code = "consolidation code",
quoted_comp = "quoted") %>%
mutate(raw_nace_primary = nace_primary,
raw_nace_secondary = nace_secondary) %>%
select(-branch,-owndata)
max_sep_primary <- max(sapply(strsplit(combined_chars$nace_primary, "\n"), length))
nace_primary_cols <- paste("nace_primary", 1:max_sep_primary, sep="")
combined_chars <- separate(combined_chars, nace_primary, into = nace_primary_cols, sep = "\n", fill = "right")
max_sep_secondary <- max(sapply(strsplit(combined_chars$nace_secondary, "\n"), length))
nace_secondary_cols <- paste("nace_sec", 1:max_sep_secondary, sep="")
combined_chars <- separate(combined_chars, nace_secondary, into = nace_secondary_cols, sep = "\n", fill = "right")
op_rev_names <- paste("op_rev", 2023:1994, sep = "_")
op_rev_cols <- grep("operating revenue \\(turnover\\)\nth usd", names(combined_chars), value = TRUE)
num_emp_names <- paste("num_emp", 2023:1994, sep = "_")
num_emp_cols <- grep("number of employees\n", names(combined_chars), value = TRUE)
tot_assets_names <- paste("tot_assets", 2023:1994, sep = "_")
tot_assets_cols <- grep("total assets\nth usd", names(combined_chars), value = TRUE)
combined_chars <- combined_chars %>%
rename(!!!setNames(op_rev_cols, op_rev_names),
!!!setNames(num_emp_cols, num_emp_names),
!!!setNames(tot_assets_cols, tot_assets_names)) %>%
mutate(across(c(all_of(op_rev_names), all_of(num_emp_names), all_of(tot_assets_names)), as.integer))
count_unique_non_na <- function(x) {
length(unique(na.omit(x)))
}
combined_chars$unique_industries <- apply(combined_chars[, c("nace_core", paste0("nace_primary", 1:8), paste0("nace_sec", 1:44))], 1, count_unique_non_na)
combined_chars <- combined_chars %>%
mutate(pharma = ifelse(nace_core == 2120 | nace_core == 2120, 1, 0),
med_manu = ifelse(nace_core == 3250 | nace_core == 2660, 1, 0),
lifesciences = ifelse(nace_core == 7211, 1 ,0),
hospital = ifelse(nace_core == 8610, 1, 0),
med_practices = ifelse(nace_core == 8621 | nace_core == 8622, 1 ,0),
dental = ifelse(nace_core == 8632, 1 , 0),
other_health = ifelse(nace_core == 8690 | nace_core == 7490, 1, 0),
ltc = ifelse(nace_core == 8710 | nace_core == 8720 | nace_core == 8790 | nace_core == 8810,1 , 0),
healthcare = pmax(med_manu, lifesciences, hospital, med_practices, dental, other_health, ltc, pharma),
inactive = recode(ianctive, "Yes"=1, "No"=0),
quoted_comp = recode(quoted_comp, "Yes"=1, "No"=0))
library(ggplot2)
library(here)
library(haven)
library(stringr)
library(purrr)
library(tidyverse)
library(readxl)
setwd(here())
set.seed(8975)
dropbox_dir <- "~/Dropbox (Harvard University)/Regulation_and_Bargaining"
ecri_data <- paste0(dropbox_dir,"/Data/ECRI")
orbis_data <- paste0(dropbox_dir,"/Data/Orbis")
# create orbis & ecri xw
all_files <- list()
for(i in 0:15) {
file = i*1000+1
df <- read_excel(paste0(orbis_data,"/mfg_vendor_xwalk/Export_mfg_vendor_",file,".xlsx"))
all_files[[i+1]] <- df
}
mfg_vendor_xwalk <- bind_rows(all_files) %>%
rename(ecri_id = "Own ID",
ecri_name = "Company name",
bvd_id = "Matched BvD ID",
bvd_name = "Matched company name")
names(mfg_vendor_xwalk) <- tolower(names(mfg_vendor_xwalk))
mfg_vendor_xwalk <- mfg_vendor_xwalk %>% select(ecri_id, bvd_id)
write_dta(mfg_vendor_xwalk, "../output/ecri_bvd_id_xw.dta")
# clean firm characteristics
all_chars <- list()
for(i in 0:15) {
file = i*1000+1
df <- read_excel(paste0(orbis_data,"/Export_mfg_vendor_",file,"_data.xlsx"), sheet = "Results")
all_chars[[i+1]] <- df
}
combined_chars <- bind_rows(all_chars) %>%
select(., -1)
names(combined_chars) <- tolower(names(combined_chars))
combined_chars <- combined_chars %>%
rename(bvd_name = "company name latin alphabet",
bvd_id = "bvd id number",
tin = "tax identification number (tin)",
lei = "lei (legal entity identifier)",
lei_start = "lei (legal entity identifier) - first assignment date",
country = "country iso code",
nace_core = "nace rev. 2, core code (4 digits)",
nace_primary = "nace rev. 2, primary code(s)",
nace_secondary = "nace rev. 2, secondary code(s)",
last_yr = "last avail. year",
consolidation_code = "consolidation code",
quoted_comp = "quoted") %>%
mutate(raw_nace_primary = nace_primary,
raw_nace_secondary = nace_secondary) %>%
select(-branch,-owndata)
max_sep_primary <- max(sapply(strsplit(combined_chars$nace_primary, "\n"), length))
nace_primary_cols <- paste("nace_primary", 1:max_sep_primary, sep="")
combined_chars <- separate(combined_chars, nace_primary, into = nace_primary_cols, sep = "\n", fill = "right")
max_sep_secondary <- max(sapply(strsplit(combined_chars$nace_secondary, "\n"), length))
nace_secondary_cols <- paste("nace_sec", 1:max_sep_secondary, sep="")
combined_chars <- separate(combined_chars, nace_secondary, into = nace_secondary_cols, sep = "\n", fill = "right")
op_rev_names <- paste("op_rev", 2023:1994, sep = "_")
op_rev_cols <- grep("operating revenue \\(turnover\\)\nth usd", names(combined_chars), value = TRUE)
num_emp_names <- paste("num_emp", 2023:1994, sep = "_")
num_emp_cols <- grep("number of employees\n", names(combined_chars), value = TRUE)
tot_assets_names <- paste("tot_assets", 2023:1994, sep = "_")
tot_assets_cols <- grep("total assets\nth usd", names(combined_chars), value = TRUE)
combined_chars <- combined_chars %>%
rename(!!!setNames(op_rev_cols, op_rev_names),
!!!setNames(num_emp_cols, num_emp_names),
!!!setNames(tot_assets_cols, tot_assets_names)) %>%
mutate(across(c(all_of(op_rev_names), all_of(num_emp_names), all_of(tot_assets_names)), as.integer))
count_unique_non_na <- function(x) {
length(unique(na.omit(x)))
}
combined_chars$unique_industries <- apply(combined_chars[, c("nace_core", paste0("nace_primary", 1:8), paste0("nace_sec", 1:44))], 1, count_unique_non_na)
combined_chars <- combined_chars %>%
mutate(pharma = ifelse(nace_core == 2120 | nace_core == 2120, 1, 0),
med_manu = ifelse(nace_core == 3250 | nace_core == 2660, 1, 0),
lifesciences = ifelse(nace_core == 7211, 1 ,0),
hospital = ifelse(nace_core == 8610, 1, 0),
med_practices = ifelse(nace_core == 8621 | nace_core == 8622, 1 ,0),
dental = ifelse(nace_core == 8632, 1 , 0),
other_health = ifelse(nace_core == 8690 | nace_core == 7490, 1, 0),
ltc = ifelse(nace_core == 8710 | nace_core == 8720 | nace_core == 8790 | nace_core == 8810,1 , 0),
healthcare = pmax(med_manu, lifesciences, hospital, med_practices, dental, other_health, ltc, pharma),
inactive = recode(inactive, "Yes"=1, "No"=0),
quoted_comp = recode(quoted_comp, "Yes"=1, "No"=0))
write_dta(mfg_vendor_xwalk, "../output/bvd_chars.dta")
View(combined_chars)
summary(combined_chars$healthcare)
library(ggplot2)
library(here)
library(haven)
library(stringr)
library(purrr)
library(tidyverse)
library(readxl)
setwd(here())
set.seed(8975)
dropbox_dir <- "~/Dropbox (Harvard University)/Regulation_and_Bargaining"
ecri_data <- paste0(dropbox_dir,"/Data/ECRI")
orbis_data <- paste0(dropbox_dir,"/Data/Orbis")
# create orbis & ecri xw
all_files <- list()
for(i in 0:15) {
file = i*1000+1
df <- read_excel(paste0(orbis_data,"/mfg_vendor_xwalk/Export_mfg_vendor_",file,".xlsx"))
all_files[[i+1]] <- df
}
mfg_vendor_xwalk <- bind_rows(all_files) %>%
rename(ecri_id = "Own ID",
ecri_name = "Company name",
bvd_id = "Matched BvD ID",
bvd_name = "Matched company name")
names(mfg_vendor_xwalk) <- tolower(names(mfg_vendor_xwalk))
mfg_vendor_xwalk <- mfg_vendor_xwalk %>% select(ecri_id, bvd_id)
write_dta(mfg_vendor_xwalk, "../output/ecri_bvd_id_xw.dta")
# clean firm characteristics
all_chars <- list()
for(i in 0:15) {
file = i*1000+1
df <- read_excel(paste0(orbis_data,"/Export_mfg_vendor_",file,"_data.xlsx"), sheet = "Results")
all_chars[[i+1]] <- df
}
combined_chars <- bind_rows(all_chars) %>%
select(., -1)
names(combined_chars) <- tolower(names(combined_chars))
combined_chars <- combined_chars %>%
rename(bvd_name = "company name latin alphabet",
bvd_id = "bvd id number",
tin = "tax identification number (tin)",
lei = "lei (legal entity identifier)",
lei_start = "lei (legal entity identifier) - first assignment date",
country = "country iso code",
nace_core = "nace rev. 2, core code (4 digits)",
nace_primary = "nace rev. 2, primary code(s)",
nace_secondary = "nace rev. 2, secondary code(s)",
last_yr = "last avail. year",
consolidation_code = "consolidation code",
quoted_comp = "quoted") %>%
mutate(raw_nace_primary = nace_primary,
raw_nace_secondary = nace_secondary) %>%
select(-branch,-owndata)
max_sep_primary <- max(sapply(strsplit(combined_chars$nace_primary, "\n"), length))
nace_primary_cols <- paste("nace_primary", 1:max_sep_primary, sep="")
combined_chars <- separate(combined_chars, nace_primary, into = nace_primary_cols, sep = "\n", fill = "right")
max_sep_secondary <- max(sapply(strsplit(combined_chars$nace_secondary, "\n"), length))
nace_secondary_cols <- paste("nace_sec", 1:max_sep_secondary, sep="")
combined_chars <- separate(combined_chars, nace_secondary, into = nace_secondary_cols, sep = "\n", fill = "right")
op_rev_names <- paste("op_rev", 2023:1994, sep = "_")
op_rev_cols <- grep("operating revenue \\(turnover\\)\nth usd", names(combined_chars), value = TRUE)
num_emp_names <- paste("num_emp", 2023:1994, sep = "_")
num_emp_cols <- grep("number of employees\n", names(combined_chars), value = TRUE)
tot_assets_names <- paste("tot_assets", 2023:1994, sep = "_")
tot_assets_cols <- grep("total assets\nth usd", names(combined_chars), value = TRUE)
combined_chars <- combined_chars %>%
rename(!!!setNames(op_rev_cols, op_rev_names),
!!!setNames(num_emp_cols, num_emp_names),
!!!setNames(tot_assets_cols, tot_assets_names)) %>%
mutate(across(c(all_of(op_rev_names), all_of(num_emp_names), all_of(tot_assets_names)), as.integer))
count_unique_non_na <- function(x) {
length(unique(na.omit(x)))
}
combined_chars$unique_industries <- apply(combined_chars[, c("nace_core", paste0("nace_primary", 1:8), paste0("nace_sec", 1:44))], 1, count_unique_non_na)
combined_chars <- combined_chars %>%
mutate(pharma = ifelse(nace_core == 2120 | nace_core == 2120, 1, 0),
med_manu = ifelse(nace_core == 3250 | nace_core == 2660, 1, 0),
lifesciences = ifelse(nace_core == 7211, 1 ,0),
hospital = ifelse(nace_core == 8610, 1, 0),
med_practices = ifelse(nace_core == 8621 | nace_core == 8622, 1 ,0),
dental = ifelse(nace_core == 8632, 1 , 0),
other_health = ifelse(nace_core == 8690 | nace_core == 7490, 1, 0),
ltc = ifelse(nace_core == 8710 | nace_core == 8720 | nace_core == 8790 | nace_core == 8810,1 , 0),
healthcare = pmax(med_manu, lifesciences, hospital, med_practices, dental, other_health, ltc, pharma),
inactive = recode(inactive, "Yes"=1, "No"=0),
quoted_comp = recode(quoted_comp, "Yes"=1, "No"=0))
write_dta(combined_chars, "../output/bvd_chars.dta")
library(ggplot2)
library(here)
library(haven)
library(stringr)
library(purrr)
library(tidyverse)
library(readxl)
setwd(here())
set.seed(8975)
dropbox_dir <- "~/Dropbox (Harvard University)/Regulation_and_Bargaining"
ecri_data <- paste0(dropbox_dir,"/Data/ECRI")
orbis_data <- paste0(dropbox_dir,"/Data/Orbis")
# create orbis & ecri xw
all_files <- list()
for(i in 0:15) {
file = i*1000+1
df <- read_excel(paste0(orbis_data,"/mfg_vendor_xwalk/Export_mfg_vendor_",file,".xlsx"))
all_files[[i+1]] <- df
}
mfg_vendor_xwalk <- bind_rows(all_files) %>%
rename(ecri_id = "Own ID",
ecri_name = "Company name",
bvd_id = "Matched BvD ID",
bvd_name = "Matched company name")
names(mfg_vendor_xwalk) <- tolower(names(mfg_vendor_xwalk))
mfg_vendor_xwalk <- mfg_vendor_xwalk %>% select(ecri_id, bvd_id)
write_dta(mfg_vendor_xwalk, "../output/ecri_bvd_id_xw.dta")
# clean firm characteristics
all_chars <- list()
for(i in 0:15) {
file = i*1000+1
df <- read_excel(paste0(orbis_data,"/Export_mfg_vendor_",file,"_data.xlsx"), sheet = "Results")
all_chars[[i+1]] <- df
}
combined_chars <- bind_rows(all_chars) %>%
select(., -1)
names(combined_chars) <- tolower(names(combined_chars))
combined_chars <- combined_chars %>%
rename(bvd_name = "company name latin alphabet",
bvd_id = "bvd id number",
tin = "tax identification number (tin)",
lei = "lei (legal entity identifier)",
lei_start = "lei (legal entity identifier) - first assignment date",
country = "country iso code",
nace_core = "nace rev. 2, core code (4 digits)",
nace_primary = "nace rev. 2, primary code(s)",
nace_secondary = "nace rev. 2, secondary code(s)",
last_yr = "last avail. year",
consolidation_code = "consolidation code",
quoted_comp = "quoted") %>%
mutate(raw_nace_primary = nace_primary,
raw_nace_secondary = nace_secondary) %>%
select(-branch,-owndata)
max_sep_primary <- max(sapply(strsplit(combined_chars$nace_primary, "\n"), length))
nace_primary_cols <- paste("nace_primary", 1:max_sep_primary, sep="")
combined_chars <- separate(combined_chars, nace_primary, into = nace_primary_cols, sep = "\n", fill = "right")
max_sep_secondary <- max(sapply(strsplit(combined_chars$nace_secondary, "\n"), length))
nace_secondary_cols <- paste("nace_sec", 1:max_sep_secondary, sep="")
combined_chars <- separate(combined_chars, nace_secondary, into = nace_secondary_cols, sep = "\n", fill = "right")
op_rev_names <- paste("op_rev", 2023:1994, sep = "_")
op_rev_cols <- grep("operating revenue \\(turnover\\)\nth usd", names(combined_chars), value = TRUE)
num_emp_names <- paste("num_emp", 2023:1994, sep = "_")
num_emp_cols <- grep("number of employees\n", names(combined_chars), value = TRUE)
tot_assets_names <- paste("tot_assets", 2023:1994, sep = "_")
tot_assets_cols <- grep("total assets\nth usd", names(combined_chars), value = TRUE)
combined_chars <- combined_chars %>%
rename(!!!setNames(op_rev_cols, op_rev_names),
!!!setNames(num_emp_cols, num_emp_names),
!!!setNames(tot_assets_cols, tot_assets_names)) %>%
mutate(across(c(all_of(op_rev_names), all_of(num_emp_names), all_of(tot_assets_names)), as.integer))
count_unique_non_na <- function(x) {
length(unique(na.omit(x)))
}
combined_chars$unique_industries <- apply(combined_chars[, c("nace_core", paste0("nace_primary", 1:8), paste0("nace_sec", 1:44))], 1, count_unique_non_na)
combined_chars <- combined_chars %>%
mutate(pharma = ifelse(nace_core == 2120 | nace_core == 2120, 1, 0),
med_manu = ifelse(nace_core == 3250 | nace_core == 2660, 1, 0),
lifesciences = ifelse(nace_core == 7211, 1 ,0),
hospital = ifelse(nace_core == 8610, 1, 0),
med_practices = ifelse(nace_core == 8621 | nace_core == 8622, 1 ,0),
dental = ifelse(nace_core == 8632, 1 , 0),
other_health = ifelse(nace_core == 8690 | nace_core == 7490, 1, 0),
ltc = ifelse(nace_core == 8710 | nace_core == 8720 | nace_core == 8790 | nace_core == 8810,1 , 0),
healthcare = pmax(med_manu, lifesciences, hospital, med_practices, dental, other_health, ltc, pharma),
inactive = recode(inactive, "Yes"=1, "No"=0),
quoted_comp = recode(quoted_comp, "Yes"=1, "No"=0)) %>%
select(-raw_nace_primary,-raw_nace_secondary)
write_dta(combined_chars, "../output/bvd_chars.dta")
library(ggplot2)
library(here)
library(haven)
library(stringr)
library(purrr)
library(tidyverse)
library(readxl)
setwd(here())
set.seed(8975)
dropbox_dir <- "~/Dropbox (Harvard University)/Regulation_and_Bargaining"
ecri_data <- paste0(dropbox_dir,"/Data/ECRI")
orbis_data <- paste0(dropbox_dir,"/Data/Orbis")
# create orbis & ecri xw
all_files <- list()
for(i in 0:15) {
file = i*1000+1
df <- read_excel(paste0(orbis_data,"/mfg_vendor_xwalk/Export_mfg_vendor_",file,".xlsx"))
all_files[[i+1]] <- df
}
mfg_vendor_xwalk <- bind_rows(all_files) %>%
rename(ecri_id = "Own ID",
ecri_name = "Company name",
bvd_id = "Matched BvD ID",
bvd_name = "Matched company name")
names(mfg_vendor_xwalk) <- tolower(names(mfg_vendor_xwalk))
mfg_vendor_xwalk <- mfg_vendor_xwalk %>% select(ecri_id, bvd_id)
write_dta(mfg_vendor_xwalk, "../output/ecri_bvd_id_xw.dta")
# clean firm characteristics
all_chars <- list()
for(i in 0:15) {
file = i*1000+1
df <- read_excel(paste0(orbis_data,"/Export_mfg_vendor_",file,"_data.xlsx"), sheet = "Results")
all_chars[[i+1]] <- df
}
combined_chars <- bind_rows(all_chars) %>%
select(., -1)
names(combined_chars) <- tolower(names(combined_chars))
combined_chars <- combined_chars %>%
rename(bvd_name = "company name latin alphabet",
bvd_id = "bvd id number",
tin = "tax identification number (tin)",
lei = "lei (legal entity identifier)",
lei_start = "lei (legal entity identifier) - first assignment date",
country = "country iso code",
nace_core = "nace rev. 2, core code (4 digits)",
nace_primary = "nace rev. 2, primary code(s)",
nace_secondary = "nace rev. 2, secondary code(s)",
last_yr = "last avail. year",
consolidation_code = "consolidation code",
quoted_comp = "quoted") %>%
mutate(raw_nace_primary = nace_primary,
raw_nace_secondary = nace_secondary) %>%
select(-branch,-owndata)
max_sep_primary <- max(sapply(strsplit(combined_chars$nace_primary, "\n"), length))
nace_primary_cols <- paste("nace_primary", 1:max_sep_primary, sep="")
combined_chars <- separate(combined_chars, nace_primary, into = nace_primary_cols, sep = "\n", fill = "right")
max_sep_secondary <- max(sapply(strsplit(combined_chars$nace_secondary, "\n"), length))
nace_secondary_cols <- paste("nace_sec", 1:max_sep_secondary, sep="")
combined_chars <- separate(combined_chars, nace_secondary, into = nace_secondary_cols, sep = "\n", fill = "right")
op_rev_names <- paste("op_rev", 2023:1994, sep = "_")
op_rev_cols <- grep("operating revenue \\(turnover\\)\nth usd", names(combined_chars), value = TRUE)
num_emp_names <- paste("num_emp", 2023:1994, sep = "_")
num_emp_cols <- grep("number of employees\n", names(combined_chars), value = TRUE)
tot_assets_names <- paste("tot_assets", 2023:1994, sep = "_")
tot_assets_cols <- grep("total assets\nth usd", names(combined_chars), value = TRUE)
combined_chars <- combined_chars %>%
rename(!!!setNames(op_rev_cols, op_rev_names),
!!!setNames(num_emp_cols, num_emp_names),
!!!setNames(tot_assets_cols, tot_assets_names)) %>%
mutate(across(c(all_of(op_rev_names), all_of(num_emp_names), all_of(tot_assets_names)), as.integer))
count_unique_non_na <- function(x) {
length(unique(na.omit(x)))
}
combined_chars$unique_industries <- apply(combined_chars[, c("nace_core", paste0("nace_primary", 1:8), paste0("nace_sec", 1:44))], 1, count_unique_non_na)
combined_chars <- combined_chars %>%
mutate(pharma = ifelse(nace_core == 2120 | nace_core == 2120, 1, 0),
med_manu = ifelse(nace_core == 3250 | nace_core == 2660, 1, 0),
lifesciences = ifelse(nace_core == 7211, 1 ,0),
hospital = ifelse(nace_core == 8610, 1, 0),
med_practices = ifelse(nace_core == 8621 | nace_core == 8622, 1 ,0),
dental = ifelse(nace_core == 8632, 1 , 0),
other_health = ifelse(nace_core == 8690 | nace_core == 7490, 1, 0),
ltc = ifelse(nace_core == 8710 | nace_core == 8720 | nace_core == 8790 | nace_core == 8810,1 , 0),
healthcare = pmax(med_manu, lifesciences, hospital, med_practices, dental, other_health, ltc, pharma),
inactive = recode(inactive, "Yes"=1, "No"=0),
quoted_comp = recode(quoted_comp, "Yes"=1, "No"=0)) %>%
select(-raw_nace_primary,-raw_nace_secondary)
write_dta(combined_chars, "../output/bvd_chars.dta")
summary(combined_chars)
